apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "0.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
}

ext {
    bintrayRepo = 'CustomDatePicker'
    bintrayName = 'CustomDatePicker'

    publishedGroupId = 'com.github.renosyah'
    libraryName = 'customdatepickerlib'
    artifact = 'customdatepickerlib'
    libraryDescription = 'simple Custom Date Picker'

    siteUrl = 'https://github.com/renosyah/CustomDatePicker'
    gitUrl = 'https://github.com/renosyah/CustomDatePicker.git'
    githubRepository= 'https://github.com/renosyah/CustomDatePicker'

    libraryVersion = '0.6'

    developerId = 'renosyah'
    developerName = 'reno syahputra'
    developerEmail = 'syahputrareno975@gmail.com'

    licenseName = 'The Apache License'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']

}


apply plugin: 'maven-publish'

group publishedGroupId
version libraryVersion

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId publishedGroupId
            version libraryVersion

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {

                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
            pom {
                name = libraryName
                description = libraryDescription
                url = siteUrl
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = gitUrl
                    developerConnection = gitUrl
                    url = siteUrl
                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

archivesBaseName = 'CustomDatePicker'
version = libraryVersion

bintray {
    user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintray.apikey') ? project.property('bintray.apikey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']

    pkg {
        repo = bintrayRepo
        name = bintrayName
        publications = ['MyPublication']
        userOrg = developerId
        desc = libraryDescription
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl+'/issues'
        vcsUrl = gitUrl
        licenses = allLicenses
        githubRepo = githubRepository
        githubReleaseNotesFile = 'README.md'
        version {
            name = libraryVersion
            desc = libraryDescription
            vcsTag = libraryVersion
            released = new Date()
        }
    }
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId

install {
    repositories.mavenInstaller {

        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl

            }
        }
    }
}


